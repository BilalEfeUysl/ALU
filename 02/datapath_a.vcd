$date
	Mon Apr 14 22:06:20 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_datapath $end
$var wire 32 ! result [31:0] $end
$var reg 3 " ALUControl [2:0] $end
$var reg 2 # addr1 [1:0] $end
$var reg 2 $ addr2 [1:0] $end
$var reg 2 % addr3 [1:0] $end
$var reg 1 & clk $end
$var reg 1 ' rst $end
$var reg 1 ( wr $end
$scope module dut $end
$var wire 3 ) ALUControl [2:0] $end
$var wire 2 * addr1 [1:0] $end
$var wire 2 + addr2 [1:0] $end
$var wire 2 , addr3 [1:0] $end
$var wire 1 & clk $end
$var wire 1 ' rst $end
$var wire 1 ( wr $end
$var wire 32 - result [31:0] $end
$var wire 32 . data2 [31:0] $end
$var wire 32 / data1 [31:0] $end
$scope module alu $end
$var wire 3 0 ALUControl [2:0] $end
$var wire 32 1 xorResult [31:0] $end
$var wire 32 2 subResult [31:0] $end
$var wire 32 3 sltResult [31:0] $end
$var wire 32 4 result [31:0] $end
$var wire 32 5 b [31:0] $end
$var wire 32 6 andResult [31:0] $end
$var wire 32 7 addResult [31:0] $end
$var wire 32 8 a [31:0] $end
$scope module add_inst $end
$var wire 32 9 result [31:0] $end
$var wire 1 : subtract $end
$var wire 32 ; b [31:0] $end
$var wire 32 < a [31:0] $end
$upscope $end
$scope module and_inst $end
$var wire 32 = result [31:0] $end
$var wire 32 > b [31:0] $end
$var wire 32 ? a [31:0] $end
$upscope $end
$scope module mux_inst $end
$var wire 32 @ addResult [31:0] $end
$var wire 32 A andResult [31:0] $end
$var wire 3 B sel [2:0] $end
$var wire 32 C xorResult [31:0] $end
$var wire 32 D subResult [31:0] $end
$var wire 32 E sltResult [31:0] $end
$var reg 32 F result [31:0] $end
$upscope $end
$scope module slt_inst $end
$var wire 32 G result [31:0] $end
$var wire 32 H b [31:0] $end
$var wire 32 I a [31:0] $end
$upscope $end
$scope module sub_inst $end
$var wire 32 J result [31:0] $end
$var wire 1 K subtract $end
$var wire 32 L b [31:0] $end
$var wire 32 M a [31:0] $end
$upscope $end
$scope module xor_inst $end
$var wire 32 N result [31:0] $end
$var wire 32 O b [31:0] $end
$var wire 32 P a [31:0] $end
$upscope $end
$upscope $end
$scope module rf $end
$var wire 2 Q addr1 [1:0] $end
$var wire 2 R addr2 [1:0] $end
$var wire 2 S addr3 [1:0] $end
$var wire 1 & clk $end
$var wire 32 T data1 [31:0] $end
$var wire 32 U data2 [31:0] $end
$var wire 32 V data3 [31:0] $end
$var wire 1 ' rst $end
$var wire 1 ( wr $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b100100011010001010110011110000 V
b10010001101000101011001111000 U
b10010001101000101011001111000 T
b0 S
b0 R
b0 Q
b10010001101000101011001111000 P
b10010001101000101011001111000 O
b0 N
b10010001101000101011001111000 M
b10010001101000101011001111000 L
1K
b0 J
b10010001101000101011001111000 I
b10010001101000101011001111000 H
b0 G
b100100011010001010110011110000 F
b0 E
b0 D
b0 C
b0 B
b10010001101000101011001111000 A
b100100011010001010110011110000 @
b10010001101000101011001111000 ?
b10010001101000101011001111000 >
b10010001101000101011001111000 =
b10010001101000101011001111000 <
b10010001101000101011001111000 ;
0:
b100100011010001010110011110000 9
b10010001101000101011001111000 8
b100100011010001010110011110000 7
b10010001101000101011001111000 6
b10010001101000101011001111000 5
b100100011010001010110011110000 4
b0 3
b0 2
b0 1
b0 0
b10010001101000101011001111000 /
b10010001101000101011001111000 .
b100100011010001010110011110000 -
b0 ,
b0 +
b0 *
b0 )
0(
0'
0&
b0 %
b0 $
b0 #
b0 "
b100100011010001010110011110000 !
$end
#5000
1&
#10000
b1 3
b1 E
b1 G
b1100101010000110010000100001111 1
b1100101010000110010000100001111 C
b1100101010000110010000100001111 N
b10011010101111001101111011110000 6
b10011010101111001101111011110000 =
b10011010101111001101111011110000 A
b10011010101111001101111011101111 !
b10011010101111001101111011101111 -
b10011010101111001101111011101111 4
b10011010101111001101111011101111 F
b10011010101111001101111011101111 V
0&
1(
b11111111111111111111111111111111 .
b11111111111111111111111111111111 5
b11111111111111111111111111111111 ;
b11111111111111111111111111111111 >
b11111111111111111111111111111111 H
b11111111111111111111111111111111 L
b11111111111111111111111111111111 O
b11111111111111111111111111111111 U
b10 $
b10 +
b10 R
b10011010101111001101111011110001 2
b10011010101111001101111011110001 D
b10011010101111001101111011110001 J
b10011010101111001101111011101111 7
b10011010101111001101111011101111 9
b10011010101111001101111011101111 @
b10011010101111001101111011110000 /
b10011010101111001101111011110000 8
b10011010101111001101111011110000 <
b10011010101111001101111011110000 ?
b10011010101111001101111011110000 I
b10011010101111001101111011110000 M
b10011010101111001101111011110000 P
b10011010101111001101111011110000 T
b1 #
b1 *
b1 Q
#15000
1&
#20000
b11111111111111111111111111111110 1
b11111111111111111111111111111110 C
b11111111111111111111111111111110 N
b0 3
b0 E
b0 G
b1 6
b1 =
b1 A
b1 !
b1 -
b1 4
b1 F
b1 V
0&
b10 "
b10 )
b10 0
b10 B
b1 %
b1 ,
b1 S
b1 .
b1 5
b1 ;
b1 >
b1 H
b1 L
b1 O
b1 U
b11 $
b11 +
b11 R
b11111111111111111111111111111110 2
b11111111111111111111111111111110 D
b11111111111111111111111111111110 J
b0 7
b0 9
b0 @
b11111111111111111111111111111111 /
b11111111111111111111111111111111 8
b11111111111111111111111111111111 <
b11111111111111111111111111111111 ?
b11111111111111111111111111111111 I
b11111111111111111111111111111111 M
b11111111111111111111111111111111 P
b11111111111111111111111111111111 T
b10 #
b10 *
b10 Q
#25000
1&
#30000
b1100101010000110010000100010000 1
b1100101010000110010000100010000 C
b1100101010000110010000100010000 N
b10011010101111001101111011101111 6
b10011010101111001101111011101111 =
b10011010101111001101111011101111 A
b1100101010000110010000100010000 !
b1100101010000110010000100010000 -
b1100101010000110010000100010000 4
b1100101010000110010000100010000 F
b1100101010000110010000100010000 V
0&
b11 "
b11 )
b11 0
b11 B
b11 %
b11 ,
b11 S
b1100101010000110010000100010000 2
b1100101010000110010000100010000 D
b1100101010000110010000100010000 J
b10011010101111001101111011101110 7
b10011010101111001101111011101110 9
b10011010101111001101111011101110 @
b10011010101111001101111011101111 .
b10011010101111001101111011101111 5
b10011010101111001101111011101111 ;
b10011010101111001101111011101111 >
b10011010101111001101111011101111 H
b10011010101111001101111011101111 L
b10011010101111001101111011101111 O
b10011010101111001101111011101111 U
b0 $
b0 +
b0 R
#35000
1&
#40000
b1100101010000110010000100010001 1
b1100101010000110010000100010001 C
b1100101010000110010000100010001 N
b1 3
b1 E
b1 G
b0 6
b0 =
b0 A
b10011010101111001101111011110001 !
b10011010101111001101111011110001 -
b10011010101111001101111011110001 4
b10011010101111001101111011110001 F
b10011010101111001101111011110001 V
0&
b1 "
b1 )
b1 0
b1 B
b10 %
b10 ,
b10 S
b1100101010000110010000100010000 .
b1100101010000110010000100010000 5
b1100101010000110010000100010000 ;
b1100101010000110010000100010000 >
b1100101010000110010000100010000 H
b1100101010000110010000100010000 L
b1100101010000110010000100010000 O
b1100101010000110010000100010000 U
b11 $
b11 +
b11 R
b10011010101111001101111011110001 2
b10011010101111001101111011110001 D
b10011010101111001101111011110001 J
b1100101010000110010000100010001 7
b1100101010000110010000100010001 9
b1100101010000110010000100010001 @
b1 /
b1 8
b1 <
b1 ?
b1 I
b1 M
b1 P
b1 T
b1 #
b1 *
b1 Q
#45000
1&
#50000
0&
